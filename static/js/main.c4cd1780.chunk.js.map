{"version":3,"sources":["images/drinkArt.png","components/Search.js","components/Result.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","state","value","handleSearch","e","_this","setState","target","prevProps","prevState","this","props","search","react_default","a","createElement","className","type","placeholder","onChange","Component","Result","_props$drinks","drinks","drink","drinkName","drinkInstructions","drinkGlass","ingredient1","ingredient2","ingredient3","ingredient4","ingredient5","ingredient6","ingredient7","ingredient8","ingredient9","ingredient10","ingredient11","ingredient12","ingredient13","ingredient14","ingredient15","amountOfIngredient1","amountOfIngredient2","amountOfIngredient3","amountOfIngredient4","amountOfIngredient5","amountOfIngredient6","amountOfIngredient7","amountOfIngredient8","amountOfIngredient9","amountOfIngredient10","amountOfIngredient11","amountOfIngredient12","amountOfIngredient13","amountOfIngredient14","amountOfIngredient15","drinkPhoto","error","ingredientList","amountOfIngredientList","content","Fragment","id","htmlFor","map","ingredient","key","amountOfIngredient","src","alt","drinkArt","concat","App","textFromSearch","text","_this2","API","fetch","then","response","ok","Error","json","data","console","log","strDrink","strInstructions","strGlass","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","strIngredient7","strIngredient8","strIngredient9","strIngredient10","strIngredient11","strIngredient12","strIngredient13","strIngredient14","strIngredient15","strMeasure1","strMeasure2","strMeasure3","strMeasure4","strMeasure5","strMeasure6","strMeasure7","strMeasure8","strMeasure9","strMeasure10","strMeasure11","strMeasure12","strMeasure13","strMeasure14","strMeasure15","strDrinkThumb","err","catch","components_Search","components_Result","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4cd1780.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drinkArt.899572ea.png\";","import React, { Component } from 'react';\r\nimport '../style/Search.scss';\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        value: '',\r\n    }\r\n\r\n    handleSearch = (e) => {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.value !== this.state.value) {\r\n            this.props.search(this.state.value);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"searchPanel\">\r\n                <input className=\"searchInput\" type=\"text\" placeholder=\"Search drink\" value={this.state.value} onChange={this.handleSearch} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport '../style/Result.scss';\r\nimport drinkArt from '../images/drinkArt.png';\r\n\r\nconst Result = (props) => {\r\n    const { drink, drinkName, drinkInstructions, drinkGlass,\r\n        ingredient1, ingredient2, ingredient3, ingredient4, ingredient5, ingredient6, ingredient7, ingredient8, ingredient9, ingredient10, ingredient11, ingredient12, ingredient13, ingredient14, ingredient15,\r\n        amountOfIngredient1, amountOfIngredient2, amountOfIngredient3, amountOfIngredient4, amountOfIngredient5, amountOfIngredient6, amountOfIngredient7, amountOfIngredient8, amountOfIngredient9, amountOfIngredient10, amountOfIngredient11, amountOfIngredient12, amountOfIngredient13, amountOfIngredient14, amountOfIngredient15,\r\n        drinkPhoto, error } = props.drinks;\r\n\r\n    const ingredientList = [ingredient1, ingredient2, ingredient3, ingredient4, ingredient5, ingredient6, ingredient7, ingredient8, ingredient9, ingredient10, ingredient11, ingredient12, ingredient13, ingredient14, ingredient15];\r\n\r\n    const amountOfIngredientList = [amountOfIngredient1, amountOfIngredient2, amountOfIngredient3, amountOfIngredient4, amountOfIngredient5, amountOfIngredient6, amountOfIngredient7, amountOfIngredient8, amountOfIngredient9, amountOfIngredient10, amountOfIngredient11, amountOfIngredient12, amountOfIngredient13, amountOfIngredient14, amountOfIngredient15];\r\n\r\n    let content = null;\r\n\r\n    if (!error && drink) { //jesli nie ma bledu i jest wpisany jakis drink\r\n        content = (\r\n            <>\r\n                <div id=\"mainHeader\">\r\n                    <h1 className=\"mainHeaderHeading\">Drink: <span className=\"drinkNameSpan\">{drinkName}</span></h1>\r\n                </div>\r\n\r\n                <div id=\"mainSectionContainer\">\r\n                    <div id=\"mainSectionIngredients\">\r\n                        <nav className=\"vocabularyMenu\">\r\n                            <input type=\"checkbox\" id=\"menuToggle\" />\r\n                            <ul className=\"vocabularyItemsList\">\r\n                                <h1 className=\"vocabularyItemsListHeading\">Vocabulary</h1>\r\n                                <li className=\"vocabularyListItem\">ts, tsp - tea spoon</li>\r\n                                <li className=\"vocabularyListItem\">tbsp - table spoon</li>\r\n                                <li className=\"vocabularyListItem\">oz - 30 ml</li>\r\n                                <li className=\"vocabularyListItem\">cl - 10 ml</li>\r\n                            </ul>\r\n                            <label htmlFor=\"menuToggle\">\r\n                                <span className=\"closeVocabularySpan\"><i className=\"fas fa-arrow-left\"></i></span>\r\n                                <span className=\"vocabularySpan\">Vocabulary</span>\r\n                            </label>\r\n                        </nav>\r\n                        <ul className=\"ingredientList\">\r\n                            <h1 className=\"ingredientListHeading\">Ingredients</h1>\r\n                            {/* przechodzi przez tablice i jesli jest składnik to go wyswietl, a jesli nie ma to nie wyswietlaj nic, dzieki temu rozwiazaniu, nie bedzie nie potrzebnych \"białych spacji\" spowodowanych przez li bo na samym poczatku juz sprawdzam, czy jest skladnik ingredient ? */}\r\n                            {/* mialem ingredient !== null ? itd, ale nie trzeba tego pisac mozna od razu ingredient, czyli jesli ingredient jest to wyswietl, a jak nie ma to nie wyswietlaj */}\r\n                            {ingredientList.map((ingredient, id) => ingredient ? <li key={id} className=\"ingredientListItem\">{/* {id + 1}: */} {ingredient}</li> : null)}\r\n                        </ul>\r\n                        <ul className=\"amountOfIngredientList\">\r\n                            <h1 className=\"amountOfIngredientListHeading\">How Much</h1>\r\n                            {/* dzialanie podobne do powyzszego (ingredientList.map), ale na kazda ilosc zastosowana jest funkcja replace, ktora sprawdza, czy pojawiaja sie tam dane znaki, aby je zamienic */}\r\n                            {amountOfIngredientList.map((amountOfIngredient, id) => amountOfIngredient ?\r\n                                <li key={id} className=\"amountOfIngredientListItem\">{/* {id + 1}: */} {amountOfIngredient/* .replace(\"oz\", \"* 30ml(vodka glass)\").replace(\"tsp\", \"tea spoon\").replace(\"ts\", \"tea spoon\").replace(\"cl\", \"* 10ml\") */}</li> : null)}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"vocabularyLite\">\r\n                        <ul className=\"vocabularyItemsListLite\">\r\n                            <h1>Vocabulary</h1>\r\n                            <li className=\"vocabularyListItemLite\">ts, tsp - tea spoon</li>\r\n                            <li className=\"vocabularyListItemLite\">tbsp - table spoon</li>\r\n                            <li className=\"vocabularyListItemLite\">oz - 30 ml</li>\r\n                            <li className=\"vocablaryListItemLitem\">cl - 10 ml</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div id=\"mainSectionInformations\">\r\n                        <img className=\"drinkPhoto\" src={drinkPhoto} alt=\"Drink\" />\r\n                        <h1 className=\"instructionsHeading\">Instructions</h1>\r\n                        <div className=\"glassToServeContainer\">\r\n                            <h2 className=\"glassToServeHeading\">Glass to serve: </h2><span>{drinkGlass}</span>\r\n                        </div>\r\n                        <div className=\"howToDoContainer\">\r\n                            <h2 className=\"howToDoHeading\">How to Do: </h2><span>{drinkInstructions}</span>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        content = (\r\n            <>\r\n                <h1>Drinks Search App</h1>\r\n                <h2>You can find here specific drink and find out how to do it</h2>\r\n                {/* https://www.kissclipart.com/hurricane-drink-cocktail-garnish-juice-orange-drink-ky4cq4/ */}\r\n                <div className=\"introPhoto\">\r\n                    <img className=\"drinkArt\" src={drinkArt} alt=\"DrinkIntro\" />\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div id=\"content\">\r\n            {error ? `Nie ma w bazie ${drink} ` : content}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\nimport '../style/App.scss';\nimport Search from './Search';\nimport Result from './Result';\n\nclass App extends Component {\n\n  state = {\n    drink: '',\n    drinkName: '',\n    drinkInstructions: '',\n    drinkGlass: '',\n    ingredient1: '',\n    ingredient2: '',\n    ingredient3: '',\n    ingredient4: '',\n    ingredient5: '',\n    ingredient6: '',\n    ingredient7: '',\n    ingredient8: '',\n    ingredient9: '',\n    ingredient10: '',\n    ingredient11: '',\n    ingredient12: '',\n    ingredient13: '',\n    ingredient14: '',\n    ingredient15: '',\n    amountOfIngredient1: '',\n    amountOfIngredient2: '',\n    amountOfIngredient3: '',\n    amountOfIngredient4: '',\n    amountOfIngredient5: '',\n    amountOfIngredient6: '',\n    amountOfIngredient7: '',\n    amountOfIngredient8: '',\n    amountOfIngredient9: '',\n    amountOfIngredient10: '',\n    amountOfIngredient11: '',\n    amountOfIngredient12: '',\n    amountOfIngredient13: '',\n    amountOfIngredient14: '',\n    amountOfIngredient15: '',\n    drinkPhoto: '',\n    error: false,\n    textFromSearch: '',\n\n  }\n\n  search = text => {\n    this.setState({\n      textFromSearch: text,\n    })\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n\n    if (prevState.textFromSearch !== this.state.textFromSearch) {\n      const API = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${this.state.textFromSearch}`; //według nazwy drinka\n      fetch(API)\n        .then(response => {\n          if (response.ok) {\n            return response\n          }\n          throw Error(\"Nie udało się\")\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log(data)\n          if (data.drinks !== null) { //zeby zapobiec errorowi ze data.null\n            this.setState(prevState => ({\n              drink: prevState.textFromSearch,\n              drinkName: data.drinks[0].strDrink,\n              drinkInstructions: data.drinks[0].strInstructions,\n              drinkGlass: data.drinks[0].strGlass,\n              ingredient1: data.drinks[0].strIngredient1,\n              ingredient2: data.drinks[0].strIngredient2,\n              ingredient3: data.drinks[0].strIngredient3,\n              ingredient4: data.drinks[0].strIngredient4,\n              ingredient5: data.drinks[0].strIngredient5,\n              ingredient6: data.drinks[0].strIngredient6,\n              ingredient7: data.drinks[0].strIngredient7,\n              ingredient8: data.drinks[0].strIngredient8,\n              ingredient9: data.drinks[0].strIngredient9,\n              ingredient10: data.drinks[0].strIngredient10,\n              ingredient11: data.drinks[0].strIngredient11,\n              ingredient12: data.drinks[0].strIngredient12,\n              ingredient13: data.drinks[0].strIngredient13,\n              ingredient14: data.drinks[0].strIngredient14,\n              ingredient15: data.drinks[0].strIngredient15,\n              amountOfIngredient1: data.drinks[0].strMeasure1,\n              amountOfIngredient2: data.drinks[0].strMeasure2,\n              amountOfIngredient3: data.drinks[0].strMeasure3,\n              amountOfIngredient4: data.drinks[0].strMeasure4,\n              amountOfIngredient5: data.drinks[0].strMeasure5,\n              amountOfIngredient6: data.drinks[0].strMeasure6,\n              amountOfIngredient7: data.drinks[0].strMeasure7,\n              amountOfIngredient8: data.drinks[0].strMeasure8,\n              amountOfIngredient9: data.drinks[0].strMeasure9,\n              amountOfIngredient10: data.drinks[0].strMeasure10,\n              amountOfIngredient11: data.drinks[0].strMeasure11,\n              amountOfIngredient12: data.drinks[0].strMeasure12,\n              amountOfIngredient13: data.drinks[0].strMeasure13,\n              amountOfIngredient14: data.drinks[0].strMeasure14,\n              amountOfIngredient15: data.drinks[0].strMeasure15,\n              drinkPhoto: data.drinks[0].strDrinkThumb,\n              err: false,\n            }))\n          }\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({\n            error: true,\n            drink: this.state.textFromSearch,\n          })\n        })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Search search={this.search} />\n        <Result drinks={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}